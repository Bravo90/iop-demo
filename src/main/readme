》》===================================================================》》
1、注释
1.1 类注释
    /**
      * 类描述(例:这是自定义系统异常)
      * @author suzh
      * @date yyyy-MM-dd HH:mm:ss (例:2018-11-30 11:40:21)
      */
1.2 方法注释
1.2.1 工具类中的方法需要全部注释
1.2.2 service接口等有关业务的方法需要注释
    /**
      * 方法描述(方法用途)
      * @author suzh
      * @date yyyy-MM-dd HH:mm:ss (例:2018-11-30 11:40:21)
      * @param 参数名称 参数含义（多个参数时,每个参数都要列出）
      * @param 参数名称 参数含义
      * @return
      */
1.3 jsp注释
1.4 js注释
1.5 css注释
》》===================================================================》》
2、命名规范
2.1 禁止一切拼音首字母形式的命名,名字长度可以比较长,保证命名语义明确
2.2 包命名要意义明确,符合java约定,例如工具类包命名(utils)
2.3 功能模块命名:
》》===================================================================》》
3、java代码:
3.1 system包:
3.1.1 base:
    (1)BaseController:controller类的父类,用于注入service和保存权限字符常量,
       其中的HttpServletRequest对象request统一在父类注入,方便controller直接使用
       而子类controller中及controller的方法参数中不要再声明HttpServletRequest,
       子类也不要声明任何service对象！
3.1.2 login:
3.1.3 rbac:功能角色权限

3.2 common包:
3.2.1 bean:pojo对象,例如统一返回类
    (1)JsonResult:Controller中方法统一返回对象
3.2.2 utils:工具类
    (1)DateUtils:日期处理相关工具
3.2.3 exception:自定义系统异常
    (1)IopException:自定义系统异常,关于业务已知的异常,例如查询某项查不到...
3.2.4 handler:处理类
    (1)IopExceptionHandler:异常处理类
    (2)SystemLogHandler:系统操作注解解析处理类
3.2.5 configurations:配置类
3.2.6 shiro:有关shiro的类,例如realm等
3.2.7 anno:自定义注解
    (1)@SystemLog:用于标记方法,记录系统操作
3.2.8 systemlog:操作日志记录
3.2.9 enums:自定义枚举
    (1)ErrorMsgEnum:系统自定义异常错误信息枚举类
        1)100xxx:用户权限等异常
        2)200xxx:某类异常错误
        3)300xxx:......
        注：ErrorCode不可以乱命名！
3.3 其他包:按业务或者功能命名

》》===================================================================》》
4、js代码:
4.1 common:common.js通用js功能,包括通用常量、通用方法等,
           Globals.contextPath()用于获得上下文路径
4.2 其他包:按功能或业务建包，同一个功能或业务的js放在同一个包下
》》===================================================================》》
5、jsp代码:
5.1 common:head.jsp通用jsp,包含必要的css和js的引入
》》===================================================================》》
6、css代码:
6.1 common:common.css全局样式
6.2 其他包参考js说明
》》===================================================================》》
7、webapp:
7.1 resources文件件:
    css、js和image文件夹中仅可以放用户自己的文件,
    外部引入的插件、css、js等放在lib文件夹中
》》===================================================================》》
8、数据模型:
8.1 iop_sys_user:用户表
    user_id、username、password、nickname、
8.2 iop_sys_rule:角色表
8.3 iop_sys_auth:权限表
8.4 iop_sys_user_rule:用户角色关联表
8.5 iop_sys_rule_auth:角色权限关联表
》》===================================================================》》
9、插件及工具
9.1 lombok:用于set、get、toString、Slf4j等的生成，请自行查询如何使用
》》===================================================================》》
问题:
1.权限框架的选择
2.数据权限需要自己实现


